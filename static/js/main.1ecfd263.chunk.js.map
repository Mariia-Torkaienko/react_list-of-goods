{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","allGoods","isReversed","start","sortBy","reverse","setState","sortyByName","sortyByLength","reset","this","goods","sort","f1","f2","localeCompare","length","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAe,CACbC,SAAUH,EACVI,YAAY,EACZC,OAAO,EACPC,OAAQ,I,EAGVC,QAAU,WACR,EAAKC,UAAS,SAAAN,GAAK,MAAK,CAAEE,YAAaF,EAAME,gB,EAG/CK,YAAc,WACZ,EAAKD,UAAS,iBAAO,CACnBF,OAAQ,gB,EAIZI,cAAgB,WACd,EAAKF,UAAS,iBAAO,CACnBF,OAAQ,c,EAIZK,MAAQ,WACN,EAAKH,SAAS,CACZL,SAAS,GAAD,OAAMH,GACdI,YAAY,K,4CAIhB,WAAU,IAAD,OACP,EAKIQ,KAAKV,MAJPC,EADF,EACEA,SACAC,EAFF,EAEEA,WACAE,EAHF,EAGEA,OACAD,EAJF,EAIEA,MAEIQ,EAAK,YAAOV,GAmBlB,OAjBAU,EAAMC,MAAK,SAACC,EAAIC,GACd,OAAQV,GACN,IAAK,WACH,OAAOS,EAAGE,cAAcD,GAE1B,IAAK,SACH,OAAOA,EAAGE,OAASH,EAAGG,OAExB,QACE,OAAO,MAITd,GACFS,EAAMN,UAIN,sBAAKY,UAAU,MAAf,WACId,GACA,wBACEe,KAAK,SACLC,QAAS,WACP,EAAKb,SAAS,CAAEH,OAAO,KAH3B,mBASDA,GACC,qCACE,uCAEA,oBAAIc,UAAU,OAAd,SACGN,EAAMS,KAAI,SAAAC,GAAI,OACb,6BAAgBA,GAAPA,QAIb,wBACEH,KAAK,SACLC,QAAST,KAAKL,QAFhB,qBAOA,wBACEa,KAAK,SACLC,QAAST,KAAKH,YAFhB,iCAOA,wBACEW,KAAK,SACLC,QAAST,KAAKD,MAFhB,mBAOA,wBACES,KAAK,SACLC,QAAST,KAAKF,cAFhB,sC,GApGMc,IAAMC,WAiHTxB,ICrIfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1ecfd263.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  allGoods: string[],\n  isReversed: boolean,\n  start: boolean,\n  sortBy: string,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    allGoods: goodsFromServer,\n    isReversed: false,\n    start: false,\n    sortBy: '',\n  };\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  sortyByName = () => {\n    this.setState(() => ({\n      sortBy: 'alphabet',\n    }));\n  };\n\n  sortyByLength = () => {\n    this.setState(() => ({\n      sortBy: 'length',\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      allGoods: [...goodsFromServer],\n      isReversed: true,\n    });\n  };\n\n  render() {\n    const {\n      allGoods,\n      isReversed,\n      sortBy,\n      start,\n    } = this.state;\n    const goods = [...allGoods];\n\n    goods.sort((f1, f2) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return f1.localeCompare(f2);\n\n        case 'length':\n          return f2.length - f1.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {!start && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ start: true });\n            }}\n          >\n            START\n          </button>\n        )}\n        {start && (\n          <>\n            <h1>Goods</h1>\n\n            <ul className=\"list\">\n              {goods.map(good => (\n                <li key={good}>{good}</li>\n              ))}\n            </ul>\n\n            <button\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortyByName}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.sortyByLength}\n            >\n              Sort by length\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}